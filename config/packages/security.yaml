security:

    encoders:
        App\Entity\Utilisateurs:
            algorithm: bcrypt
        App\Entity\Medecins:
            algorithm: bcrypt
            
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        # in_database
        chain_provider:
            chain:
                providers: [utlisateur_provider, medecin_provider]
        utlisateur_provider:
            entity: 
                class: App\Entity\Utilisateurs
                property: email
        medecin_provider:
            entity: 
                class: App\Entity\Medecins
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: chain_provider

            form_login:
               login_path: security_login
               check_path: security_login

            logout:
               path: security_logout
               target: sitemedecin
            #login medecin
            # form_login: 
            #     login_path: medecin_login 
            #     check_path: medecin_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
          - { path: ^/admin, roles: ROLE_ADMIN }
        #   - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #   - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/profile, roles: ROLE_USER }

    access_denied_url: /site
